plugins {
    id 'java'
    id 'war'
    id 'application'
    id "io.freefair.lombok" 
    id 'org.springframework.boot'
	id 'io.spring.dependency-management'
    id 'com.github.johnrengelman.shadow'
}

sourceCompatibility = '17'
targetCompatibility = '17'

sourceSets {
    main {
        java {
            srcDir 'src/main/java' // assuming 'src/main/java' is your main source folder
            include 'project4/**' // include only the files in the 'project4' folder
        }
        resources {
            srcDirs 'src/main/resources'
        }
    }

    test {
        java {
            srcDirs 'src/test/java'
        }
        resources {
            srcDirs 'src/test/resources'
        }
    }
}

repositories {
    mavenLocal()
    mavenCentral() 
}

dependencies {
    implementation 'com.google.code.gson:gson:_'
    implementation 'javax.servlet:javax.servlet-api:_'
    implementation 'io.swagger:swagger-java-client:_'
    implementation 'org.apache.logging.log4j:log4j-api:_'
    implementation 'org.apache.logging.log4j:log4j-core:_'
    implementation 'org.springframework.boot:spring-boot-starter'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'com.rabbitmq:amqp-client:_'
    implementation 'software.amazon.awssdk:dynamodb:+'
}

war {
    webAppDirName = 'src/main/webapp'
}

application {
    mainClassName = 'project4.server.consumers.Driver'
}

task runP2Client(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    main = 'project2.client.Driver'
}

task runP2Consumer(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    main = 'project2.serverbackendconsumer.Driver'
}

task runP3Client(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    main = 'project3.client.Driver'
}

task runP3Consumer(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    main = 'project3.server.consumers.Driver'
}

task runP4Client(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    main = 'project4.client.Driver'
}

task runP4Consumer(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    main = 'project4.server.consumers.Driver'
}

bootJar {
    archiveBaseName = 'sbwebapp'
    version = '0.0.1'
}

processResources {
    duplicatesStrategy = DuplicatesStrategy.INCLUDE // or choose another strategy
}
